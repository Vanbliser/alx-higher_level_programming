import function
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

define matrix
>>> matrix = [
... [2, 4, 6],
... [8, 6, 4]
... ]

>>> matrix1 = [[1, 2, 3]]

>>> matrix2 = [
... [1, 2],
... [1, 2, 3]
... ]

>>> matrix3 = [
... [1, 2, 3],
... [4, 5, '6']
... ]

>>> matrix4 = []

>>> matrix5 = [[100e10000, 2, 3]]

>>> matrix6 = [2, 4, 6]

TEST INCORRECT DIV

>>> matrix_divided(matrix, float('inf'))
Traceback (innermost last):
	...
TypeError: div must be a number

>>> matrix_divided(matrix, 100e1000000)
Traceback (innermost last):
	...
TypeError: div must be a number



TEST DIFFERENT WRONG MATRICES

>>> matrix_divided(matrix2, 3)
Traceback (innermost last):
	...
TypeError: Each row of the matrix must have the same size
 
>>> matrix_divided(matrix3, 3)
Traceback (innermost last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix4, 3)
Traceback (innermost last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix5, 3)
Traceback (innermost last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix6, 3)
Traceback (innermost last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats


TEST CORRECT FORMAT
>>> res = matrix_divided(matrix, 2)
>>> res
[[1.0, 2.0, 3.0], [4.0, 3.0, 2.0]]
